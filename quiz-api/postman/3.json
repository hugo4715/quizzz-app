{
	"info": {
		"_postman_id": "00de3553-313b-4329-aa2e-85b9a0d92751",
		"name": "3 - Answer Quiz",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delete all participations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok deleted\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get quiz info - Ensure 10 questions and no results",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"info = pm.response.json()\r",
							"\r",
							"pm.test(\"Check infos\", function () {\r",
							"    pm.expect(info.size).to.equal(10);\r",
							"    pm.expect(info.scores.length).to.equal(0);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/quiz-info",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"quiz-info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - incomplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Anton\",\r\n    \"answers\": [1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - overcomplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Anton\",\r\n    \"answers\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Anton (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Anton\");\r",
							"    pm.expect(resut.score).to.equal(2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Anton\",\r\n    \"answers\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Bruno (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Bruno\");\r",
							"    pm.expect(resut.score).to.equal(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Bruno\",\r\n    \"answers\": [2, 2, 1, 1, 1, 1, 1, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Caesar (6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Caesar\");\r",
							"    pm.expect(resut.score).to.equal(6);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Caesar\",\r\n    \"answers\": [2, 2, 4, 4, 1, 1, 1, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Dora (8)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Dora\");\r",
							"    pm.expect(resut.score).to.equal(8);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Dora\",\r\n    \"answers\": [2, 2, 4, 4, 1, 2, 4, 1, 1, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Emil (10)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Emil\");\r",
							"    pm.expect(resut.score).to.equal(10);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Emil\",\r\n    \"answers\": [2, 2, 4, 4, 1, 2, 4, 2, 4, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Fritz (0)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Fritz\");\r",
							"    pm.expect(resut.score).to.equal(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Fritz\",\r\n    \"answers\": [1, 1, 1, 1, 2, 1, 1, 1, 1, 2]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Participation - Gustav (7)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"resut = pm.response.json()\r",
							"\r",
							"pm.test(\"Result is as expected\", function () {\r",
							"    pm.expect(resut.playerName).to.equal(\"Gustav\");\r",
							"    pm.expect(resut.score).to.equal(7);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playerName\": \"Gustav\",\r\n    \"answers\": [1, 1, 1, 4, 1, 2, 4, 2, 4, 1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/participations",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"participations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get quiz info - Check results",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request respond ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request respond json\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"info = pm.response.json()\r",
							"\r",
							"pm.test(\"Check infos\", function () {\r",
							"    pm.expect(info.size).to.equal(10);\r",
							"    pm.expect(info.scores.length).to.equal(7);\r",
							"});\r",
							"\r",
							"pm.test(\"Check results are in proper order\", function () {\r",
							"    pm.expect(info.scores[0].playerName).to.equal(\"Emil\");\r",
							"    pm.expect(info.scores[0].score).to.equal(10);\r",
							"    pm.expect(info.scores[1].playerName).to.equal(\"Dora\");\r",
							"    pm.expect(info.scores[1].score).to.equal(8);\r",
							"    pm.expect(info.scores[2].playerName).to.equal(\"Gustav\");\r",
							"    pm.expect(info.scores[2].score).to.equal(7);\r",
							"    pm.expect(info.scores[3].playerName).to.equal(\"Caesar\");\r",
							"    pm.expect(info.scores[3].score).to.equal(6);\r",
							"    pm.expect(info.scores[4].playerName).to.equal(\"Bruno\");\r",
							"    pm.expect(info.scores[4].score).to.equal(4);\r",
							"    pm.expect(info.scores[5].playerName).to.equal(\"Anton\");\r",
							"    pm.expect(info.scores[5].score).to.equal(2);    \r",
							"    pm.expect(info.scores[6].playerName).to.equal(\"Fritz\");\r",
							"    pm.expect(info.scores[6].score).to.equal(0);\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{MainDNS}}:{{Port}}/quiz-info",
					"host": [
						"{{MainDNS}}"
					],
					"port": "{{Port}}",
					"path": [
						"quiz-info"
					]
				}
			},
			"response": []
		}
	]
}